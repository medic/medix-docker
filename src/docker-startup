#!/bin/bash -eu

is_200() {
	local url="$1"
	local status="$(curl -o /dev/null --silent --head --write-out '%{http_code}\n' "$url")"
	echo "$url return status: $status"
	[ "$status" = 200 ]
	return $?
}

echo "[$0] patching nginx config..."
# TODO should these files be setup in Dockerfile?
cp /alex-and-dave/nginx.conf /etc/nginx/nginx.conf
mkdir -p /etc/nginx/private
cp /alex-and-dave/nginx.crt /etc/nginx/private/default.crt;
cp /alex-and-dave/nginx.key /etc/nginx/private/default.key;
service nginx reload

couchUrl=http://admin:pass@localhost:5984
ddocUrl=$couchUrl/medic/_design/medic

echo "[$0] Exposing nodejs executable to hipsters..."
ln -s $(which nodejs) /usr/bin/node

echo "[$0] Overwriting couch settings..."
cp /alex-and-dave/local.ini /etc/couchdb/local.ini
chown -R couchdb:couchdb /etc/couchdb/

echo "[$0] Starting couch..."
mkdir -p /var/run/couchdb
mkdir -p /var/log/couchdb
chown couchdb:couchdb /var/run/couchdb
chown couchdb:couchdb /var/log/couchdb
su couchdb -c couchdb &
# TODO couch service doesn't start properly so we just do it manually here :-/

echo "[$0] Waiting for couch..."
while ! is_200 "$couchUrl"; do
	echo "[$0] Couch not started yet..."
	sleep 1
done

echo "[$0] Creating medic db..."
curl -X PUT "$couchUrl"/medic

echo "[$0] Deploying ddoc..."
is_200 "$ddocUrl" ||
		curl $ddocUrl -X PUT --data-binary @/alex-and-dave/ddoc.json

echo "[$0] Checking ddoc exists..."
is_200 "$ddocUrl" || (echo 'DDoc not found.' && exit 1)

echo "[$0] Starting horticulturalist..."
# TODO this should be done as a system.d service or whatever
# TODO for now fork this into background
useradd horticulturalist
mkdir /home/horticulturalist
chown horticulturalist /home/horticulturalist
chown horticulturalist /usr/local/lib/node_modules/horticulturalist
# TODO this COUCH_URL should be unique to horticulturalist user and should contain specific user details.  Better yet, it wouldn't be an env var.
export COUCH_URL="$couchUrl/medic"
export COUCH_NODE_NAME="couchdb@localhost"
su horticulturalist -c 'horticulturalist --local' &

echo "[$0] Startup complete."
